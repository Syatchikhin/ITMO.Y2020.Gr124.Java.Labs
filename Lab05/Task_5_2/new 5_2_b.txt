package com.company;
import java.util.LinkedHashSet;
import java.util.TreeSet;
public class Main {

    public static void main(String[] args) {
        // 2. Является ли слово полиндромом
//        LinkedHashSet  rows = new LinkedHashSet<>();
//        LinkedHashSet.add("казак");
//        LinkedHashSet.add("шалаш");
//        LinkedHashSet.add("Петя");
//        LinkedHashSet.add("Вася");
//        LinkedHashSet.add("Однаждыуденую");
//        LinkedHashSet.add("Однаждзимнюю");
//        LinkedHashSet.add("Однаждыстуденуюзимнююпору");
//        LinkedHashSet.add("Всубботупятогоапреля");
//        LinkedHashSet.add("ТыпомнишьдядяведьнедаромМоскваспаленнаяпожаром");
//        LinkedHashSet.add("ХорошаядевочкаЛида");
        TreeSet <String> rows = new TreeSet<String>();
        rows.add("казак");
        rows.add("шалаш");
        rows.add("Петя");
        rows.add("Вася");
        rows.add("Однаждыуденую");
        rows.add("Однаждзимнюю");
        rows.add("Однаждыстуденуюзимнююпору");
        rows.add("Всубботупятогоапреля");
        rows.add("ТыпомнишьдядяведьнедаромМоскваспаленнаяпожаром");
        rows.add("ХорошаядевочкаЛида");

        int half;
        char begin;

        char end;
        String origin;

        //for (LinkedHashSet row : rows ){
        for (String row : rows ){
            origin = row;
            half = Math.abs(row.length()/2);
            int currentLength = row.length();
            System.out.print(origin +" "+ half +" "+ currentLength+"\n");
            //**********здесь определяем полином ли
                for ( int i = 0; i < half ; i++) {
                   if ( row.charAt(i) != row.charAt(currentLength-1) ) {
                        // не полином
                       System.out.println("no polinom" + origin);
                   }
                   else{
                       // перебор следующих букв
                       if (currentLength >= 3) {
                           // если более трех букв - отнять 2 буквы
                           currentLength--;
                       }
                       else {
                           // полином
                           System.out.println("polinom" + origin);
                       }
                   }
                }
            //**************
        }
            //origin = row;
           // half = Math.abs(row.length()/2);
           // int currentLength = row.length();
            //for (int i =1; i < half; i ++){

               // begin = row.charAt(i);
               // end = row.charAt(currentLength-1);
               // if (begin != end ) {
               //     ;
                    //неполином
               //     break;
               // }
               // if (currentLength >=3){
                //    row = row.substring(1,currentLength);
               //     currentLength = currentLength - 2;
               // }
                //System.out.print(origin);
           // }
            //System.out.println(rows);

        //}
        //System.out.print(longest);

        //Вывод слов - палиндромов
        //for (String row : rows ){
        //    System.out.print(row);
        //}
        //Вывод слов - палиндромов
//        for (String row : rows ){
//            System.out.println(row);
//        }

    }
}
